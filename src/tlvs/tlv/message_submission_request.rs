use crate::{
    commands::types::{
        addr_subunit::AddrSubunit, alert_on_msg_delivery::AlertOnMessageDelivery,
        bearer_type::BearerType, callback_num_pres_ind::CallbackNumPresInd,
        dest_addr_np_resolution::DestAddrNpResolution, display_time::DisplayTime,
        its_reply_type::ItsReplyType, its_session_info::ItsSessionInfo,
        language_indicator::LanguageIndicator, more_messages_to_send::MoreMessagesToSend,
        ms_msg_wait_facilities::MsMsgWaitFacilities, ms_validity::MsValidity,
        network_type::NetworkType, number_of_messages::NumberOfMessages, payload_type::PayloadType,
        privacy_indicator::PrivacyIndicator, set_dpf::SetDpf, sub_address::Subaddress,
        ussd_service_op::UssdServiceOp, MessagePayload, UserMessageReference,
    },
    types::{COctetString, OctetString},
};

crate::create_tlv_value! {
    #[non_exhaustive]
    #[derive(Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord)]
    pub enum MessageSubmissionRequestTlvValue {
        AlertOnMessageDelivery(AlertOnMessageDelivery),
        BillingIdentification(OctetString<0, 1024>),
        CallbackNum(OctetString<4, 19>),
        CallbackNumAtag(OctetString<0, 65>),
        CallbackNumPresInd(CallbackNumPresInd),
        DestAddrNpCountry(OctetString<1, 5>),
        DestAddrNpInformation(OctetString<0, 10>),
        DestAddrNpResolution(DestAddrNpResolution),
        DestAddrSubunit(AddrSubunit),
        DestBearerType(BearerType),
        DestNetworkId(COctetString<7, 66>),
        DestNetworkType(NetworkType),
        DestNodeId(OctetString<6, 6>),
        DestSubaddress(Subaddress),
        DestTelematicsId(u16),
        DestPort(u16),
        DisplayTime(DisplayTime),
        ItsReplyType(ItsReplyType),
        ItsSessionInfo(ItsSessionInfo),
        LanguageIndicator(LanguageIndicator),
        MessagePayload(MessagePayload),
        MoreMessagesToSend(MoreMessagesToSend),
        MsMsgWaitFacilities(MsMsgWaitFacilities),
        MsValidity(MsValidity),
        NumberOfMessages(NumberOfMessages),
        PayloadType(PayloadType),
        PrivacyIndicator(PrivacyIndicator),
        QosTimeToLive(u32),
        SarMsgRefNum(u16),
        SarSegmentSeqnum(u8),
        SarTotalSegments(u8),
        SetDpf(SetDpf),
        SmsSignal(u16),
        SourceAddrSubunit(AddrSubunit),
        SourceBearerType(BearerType),
        SourceNetworkId(COctetString<7, 66>),
        SourceNetworkType(NetworkType),
        SourceNodeId(OctetString<6, 6>),
        SourcePort(u16),
        SourceSubaddress(Subaddress),
        SourceTelematicsId(u16),
        UserMessageReference(UserMessageReference),
        UserResponseCode(u8),
        UssdServiceOp(UssdServiceOp),
    }
}
